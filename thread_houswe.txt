import java.util.*;
import java.io.*;

public class Household {
    public static void main(String[] args) throws InterruptedException {
        final HW hw = new HW();
        Thread t1 = new Thread(new Runnable() {
            public void run() {
                try {
                    hw.makeroti();
                } catch (InterruptedException e) {
                    System.out.println(e);
                }
            }
        });
        Thread t2 = new Thread(new Runnable() {
            public void run() {
                try {
                    hw.eatroti();
                } catch (InterruptedException e) {
                    System.out.println(e);
                }
            }
        });
        t1.start();
        t2.start();
        try {
            t1.join();
            t2.join();
        } catch (Exception e) {
            System.out.println(e);
        }

    }

    public static class HW {
        Stack<Integer> list = new Stack<Integer>();
        int capacity = 15;

        public void makeroti() throws InterruptedException {
            int value = 0;
            while (true) {
                synchronized (this) {
                    while (list.size() == capacity)
                        wait();

                    System.out.println("Wife makes Roti - " + value);
                    list.push(value++);
                    notify();
                    Thread.sleep(1000);
                }
            }
        }

        public void eatroti() throws InterruptedException {
            while (true) {
                synchronized (this) {
                    while (list.size() == 0)
                        wait();
                    int val = list.pop();

                    System.out.println("Husband eats the roti - " + val);
                    notify();
                    Thread.sleep(1000);
                }
            }
        }
    }
}